{"version":3,"sources":["utilities/storage.js","store/todo/reducer.js","store/notifications/reducer.js","store/todo/action.js","store/action-types.js","store/todo/saga.js","utilities/date.js","store/notifications/saga.js","store/notifications/action.js","store/saga.js","store/store.js","components/CreateList/CreateList.js","components/ListsControl/List/List.js","components/Notifications/Notifications.js","components/ListsControl/ListsControls.js","components/Popup/Popup.js","containers/TodoList/TodoList.js","index.js","components/CreateList/CreateList.module.scss","components/ListsControl/ListsControle.module.scss","components/ListsControl/List/List.module.scss","components/Notifications/Notifications.module.scss","containers/TodoList/TodoList.module.scss"],"names":["getDataFromStorage","key","data","localStorage","getItem","JSON","parse","setDataInStorage","setItem","stringify","initialState","todoLists","addTodo","state","payload","produce","draft","push","deleteTodo","index","splice","notifications","addNotification","deleteNotifications","type","deleteTodoInit","addList","deleteList","todoSaga","action","put","select","todoReducer","toast","success","position","error","message","all","takeEvery","concatDate","date","time","dey","getDate","mount","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","Date","isPassedDate","addListInNotifications","deleteNotificationsList","notificationSaga","notificationReducer","i","length","_notifications","watchSaga","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","store","createStore","applyMiddleware","run","CreateList","dispatch","useDispatch","useState","title","setTitle","info","setInfo","selectedDate","handleDateChange","selectedTime","handleTimeChange","changeTodo","event","target","name","value","className","classes","formContainer","Card","formContainer__fieldsContainer","formContainer__fieldsContainer__field","TextField","label","onChange","utils","DateFnsUtils","DatePicker","format","animateYearScrolling","TimePicker","autoOk","Button","variant","color","onClick","trim","addTodoInit","List","props","_date","dd","mm","yy","formatDate","h","m","formatTime","list","Accordion","AccordionSummary","expandIcon","Typography","right","AccordionDetails","Notifications","addNotificationTimeToTime","setTimeout","useEffect","viewNotifications","map","notification","notContainer","notContainer__icon","content","Badge","badgeContent","fontSize","ListsControls","viewLists","listContainer__listPanl","listContainer__listPanl__buttons","listContainer__listPanl__buttons__delete","listContainer","DialogTitle","withStyles","theme","root","margin","minWidth","padding","spacing","closeButton","top","palette","grey","children","onClose","other","disableTypography","IconButton","aria-label","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","Popup","open","setOpen","closeDialog","Dialog","aria-labelledby","id","dividers","gutterBottom","component","autoFocus","TodoList","useSelector","mainContainer","mainContainer__title","ReactDOM","render","Fragment","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.22074232.chunk.js","sourcesContent":["// get data from localstorage\nexport const getDataFromStorage = (key) => {\n    const data = localStorage.getItem(key);\n    return JSON.parse(data);\n}\n\n// set data in localstorage\nexport const setDataInStorage = (key, data) => {\n    localStorage.setItem(key, JSON.stringify(data));\n}","import produce from 'immer';\nimport { getDataFromStorage } from '../../utilities/storage';\n\n// action-types\nimport {\n    ADD_TODO,\n    DELETE_TODO,\n} from '../action-types';\n\n\nconst initialState = {\n    todoLists: getDataFromStorage('lists') || [],\n};\n\n\nconst addTodo = (state, payload) => {\n    const {data} = payload;\n    return produce(state, draft => {\n        draft.todoLists.push(data);\n    });\n};\nconst deleteTodo = (state, payload) => {\n    const {index} = payload;\n    return produce(state, draft => {\n        draft.todoLists.splice(index, 1);\n    });\n};\n\n\nconst todoReducer = (state = initialState, action) => {\n    const {type, payload} = action;\n    switch (type) {\n        case ADD_TODO: return addTodo(state, payload)\n        case DELETE_TODO: return deleteTodo(state, payload)\n\n        default: return state;\n    }\n};\n\n\nexport { todoReducer };","import produce from 'immer';\nimport { getDataFromStorage } from '../../utilities/storage';\n\n// action-types\nimport {\n    ADD_NOTIFICATION,\n    DELETE_NOTIFICATIONS,\n} from '../action-types';\n\n\nconst initialState = {\n    notifications: getDataFromStorage('notifications') || [],\n};\n\n\nconst addNotification = (state, payload) => {\n    const {data} = payload;\n    return produce(state, draft => {\n        draft.notifications.push(data);\n    });\n};\nconst deleteNotifications = (state) => {\n    return produce(state, draft => {\n        draft.notifications = [];\n    });\n}\n\nconst notificationReducer = (state = initialState, action) => {\n    const {type, payload} = action;\n    switch (type) {\n        case ADD_NOTIFICATION: return addNotification(state, payload)\n        case DELETE_NOTIFICATIONS: return deleteNotifications(state)\n\n        default: return state;\n    }\n};\n\n\nexport { notificationReducer };","// action-types\nimport {\n    ADD_TODO_INIT,\n    ADD_TODO,\n    DELETE_TODO_INIT,\n    DELETE_TODO,\n} from '../action-types';\n\n\nexport const addTodoInit = (data) => {\n    return {\n        type: ADD_TODO_INIT,\n        payload: {data}\n    }\n};\nexport const addTodo = (data) => {\n    return {\n        type: ADD_TODO,\n        payload: {data}\n    }\n};\n\nexport const deleteTodoInit = (index) => {\n    return {\n        type: DELETE_TODO_INIT,\n        payload: {index}\n    }\n};\nexport const deleteTodo = (index) => {\n    return {\n        type: DELETE_TODO,\n        payload: {index}\n    }\n};","// list\nexport const ADD_TODO_INIT = 'ADD_TODO_INIT';\nexport const ADD_TODO = 'ADD_TODO';\nexport const DELETE_TODO_INIT = 'DELETE_TODO_INIT';\nexport const DELETE_TODO = 'DELETE_TODO';\n\n// notifications\nexport const ADD_NOTIFICATION_INIT = 'ADD_NOTIFICATION_INIT';\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION';\nexport const DELETE_NOTIFICATIONS_INIT = 'DELETE_NOTIFICATIONS_INIT';\nexport const DELETE_NOTIFICATIONS = 'DELETE_NOTIFICATIONS';\n\n","import toast from 'cogo-toast';\nimport { select } from 'redux-saga/effects';\nimport { setDataInStorage } from '../../utilities/storage';\n\n// saga effects\nimport {\n    put,\n    takeEvery,\n    all,\n} from 'redux-saga/effects';\n\n// action-types\nimport {\n    ADD_TODO_INIT,\n    DELETE_TODO_INIT,\n} from '../action-types';\n\n// actions\nimport {\n    addTodo,\n    deleteTodo\n} from './action';\n\n\nfunction* addList(action) {\n    try {\n        const {payload: {data}} = action;\n        yield put(addTodo(data));\n        const state = yield select();\n        const {todoReducer: {todoLists}} = state;\n        setDataInStorage('lists', todoLists);\n        toast.success('ToDo successfully added', {position: 'bottom-right'});\n    } catch (err) {\n        toast.error(err.message, {position: 'bottom-right'});\n    }\n};\nfunction* deleteList(action) {\n    try {\n        const {payload: {index}} = action;\n        yield put(deleteTodo(index));\n        const state = yield select();\n        const {todoReducer: {todoLists}} = state;\n        setDataInStorage('lists', todoLists);\n        toast.success('ToDo successfully deleted', {position: 'bottom-right'});\n    } catch (err) {\n        toast.error(err.message, {position: 'bottom-right'});\n    }\n};\n\n\nexport function* todoSaga() {\n    yield all([\n        takeEvery(ADD_TODO_INIT, addList),\n        takeEvery(DELETE_TODO_INIT, deleteList),\n    ]);\n}","// change data format\nexport const formatDate = (_date) => {\n    let date = new Date(_date);\n\n    let dd = date.getDate();\n    if (dd < 10) dd = `0${dd}`;\n    let mm = date.getMonth() + 1;\n    if (mm < 10) mm = `0${mm}`;\n    let yy = date.getFullYear();\n    if (yy < 10) yy = `0${yy}`;\n    return `${dd}/${mm}/${yy}`;\n}\n\n// change time format\nexport const formatTime = (_date) => {\n    let date = new Date(_date);\n\n    let h = date.getHours();\n    let m = date.getMinutes();\n    if (m < 10) m = `0${m}`;\n    return `${h}:${m}`;\n}\n\n// concat date\nexport const concatDate = (date, time) => {\n    const dey = date.getDate();\n    const mount = date.getMonth();\n    const year = date.getFullYear();\n    const hours = time.getHours();\n    const minutes = time.getMinutes();\n    const seconds = time.getSeconds();\n\n    return new Date(year, mount, dey, hours, minutes, seconds)\n}\n\n// compare date\nexport const isPassedDate = (date) => {\n    return new Date(date) <= new Date();\n}","import { select } from 'redux-saga/effects';\nimport { isPassedDate } from '../../utilities/date';\nimport toast from 'cogo-toast';\n\n// saga effects\nimport {\n    put,\n    takeEvery,\n    all,\n} from 'redux-saga/effects';\n\n// action-types\nimport {\n    ADD_NOTIFICATION_INIT,\n    DELETE_NOTIFICATIONS_INIT,\n} from '../action-types';\n\n// actions\nimport { deleteTodoInit } from '../todo/action';\nimport {\n    addNotification,\n    deleteNotifications\n} from '../notifications/action';\nimport {setDataInStorage} from \"../../utilities/storage\";\n\n\nfunction* addListInNotifications() {\n    try {\n        const state = yield select();\n        const {\n            todoReducer: {todoLists},\n            notificationReducer: {notifications}\n        } = state;\n\n        for (let i = 0; i < todoLists.length; ++i) {\n            const date = todoLists[i].date;\n            if (isPassedDate(date)) {\n                yield put(deleteTodoInit(i));\n                yield put(addNotification(todoLists[i]));\n                const _notifications = [...notifications];\n                _notifications.push(todoLists[i]);\n                setDataInStorage('notifications', _notifications);\n                toast.success('Notification added', {position: 'bottom-right'});\n            }\n        }\n\n    } catch (err) {\n        toast.error(err.message, {position: 'bottom-right'});\n    }\n};\n\nfunction *deleteNotificationsList() {\n    try {\n        yield put(deleteNotifications());\n        setDataInStorage('notifications', []);\n        toast.success('Notifications deleted', {position: 'bottom-right'});\n    } catch (err) {\n        toast.error(err.message, {position: 'bottom-right'});\n    }\n}\n\n\nexport function* notificationSaga() {\n    yield all([\n        takeEvery(ADD_NOTIFICATION_INIT, addListInNotifications),\n        takeEvery(DELETE_NOTIFICATIONS_INIT, deleteNotificationsList),\n    ]);\n}","// action-types\nimport {\n    ADD_NOTIFICATION_INIT,\n    ADD_NOTIFICATION,\n    DELETE_NOTIFICATIONS_INIT,\n    DELETE_NOTIFICATIONS,\n} from '../action-types';\n\n\nexport const addNotificationInit = (data) => {\n    return {\n        type: ADD_NOTIFICATION_INIT,\n        payload: {data}\n    }\n};\nexport const addNotification = (data) => {\n    return {\n        type: ADD_NOTIFICATION,\n        payload: {data}\n    }\n};\n\nexport const deleteNotificationsInit = () => {\n    return {\n        type: DELETE_NOTIFICATIONS_INIT,\n    }\n};\nexport const deleteNotifications = () => {\n    return {\n        type: DELETE_NOTIFICATIONS,\n    }\n};","// saga effects\nimport { all } from 'redux-saga/effects';\n\n// sagas\nimport { todoSaga } from './todo/saga';\nimport { notificationSaga } from './notifications/saga';\n\n\nexport function* watchSaga() {\n    yield all([\n        todoSaga(),\n        notificationSaga(),\n    ])\n}","// redux\nimport {\n    createStore,\n    combineReducers,\n    applyMiddleware\n} from 'redux';\n\n// Reducers\nimport { todoReducer } from './todo/reducer';\nimport { notificationReducer } from './notifications/reducer';\n\n// sagas\nimport createSagaMiddleware from 'redux-saga';\nimport { watchSaga } from './saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst rootReducer = combineReducers({\n    todoReducer,\n    notificationReducer,\n});\n\nexport const store = createStore(\n    rootReducer,\n    applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(watchSaga);","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { concatDate } from '../../utilities/date';\nimport toast from 'cogo-toast';\n\n// actions\nimport { addTodoInit } from '../../store/todo/action';\n\n// material\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    TimePicker,\n    DatePicker,\n} from \"@material-ui/pickers\";\n\n// classes\nimport classes from './CreateList.module.scss';\n\n\nconst CreateList = () => {\n    const dispatch = useDispatch();\n    const [title, setTitle] = useState('');\n    const [info, setInfo] = useState('');\n    const [selectedDate, handleDateChange] = useState(new Date());\n    const [selectedTime, handleTimeChange] = useState(new Date());\n\n    const changeTodo = (event) => {\n        const {target: {name, value}} = event;\n        switch (name) {\n            case 'title': return setTitle(value)\n            case 'info': return setInfo(value)\n            default: return null\n        }\n    }\n\n    const createTodo = () => {\n        const isValid = title.trim().length && info.trim().length;\n        if (isValid) {\n            const data = {\n                date: concatDate(selectedDate, selectedTime),\n                title,\n                info,\n            }\n            dispatch(addTodoInit(data));\n            setTitle('');\n            setInfo('');\n        } else {\n            toast.error('Title and Info is required', {position: 'bottom-right'});\n        }\n    }\n\n    return (\n        <section className={classes.formContainer}>\n            <Card>\n                <div className={classes.formContainer__fieldsContainer}>\n                    <div className={classes.formContainer__fieldsContainer__field}>\n                        <TextField\n                            name='title'\n                            label=\"Title *\"\n                            value={title}\n                            onChange={changeTodo}\n                        />\n                    </div>\n                    <div className={classes.formContainer__fieldsContainer__field}>\n                        <TextField\n                            name='info'\n                            label=\"Info *\"\n                            value={info}\n                            onChange={changeTodo}\n                        />\n                    </div>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <div className={classes.formContainer__fieldsContainer__field}>\n                            <DatePicker\n                                label=\"Date\"\n                                format=\"MM/dd/yyyy\"\n                                value={selectedDate}\n                                onChange={handleDateChange}\n                                animateYearScrolling\n                            />\n                        </div>\n                        <div className={classes.formContainer__fieldsContainer__field}>\n                            <TimePicker\n                                autoOk label=\"Hours\"\n                                value={selectedTime}\n                                onChange={handleTimeChange}\n                            />\n                        </div>\n                    </MuiPickersUtilsProvider>\n\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={createTodo}\n                    >\n                        Primary\n                    </Button>\n                </div>\n            </Card>\n        </section>\n    )\n}\n\nexport { CreateList }","import React from 'react';\nimport {\n    formatDate,\n    formatTime,\n} from '../../../utilities/date';\n\n// material\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Accordion from '@material-ui/core/Accordion';\n\n// classes\nimport classes from './List.module.scss';\n\n\nconst List = (props) => {\n    const {title, info, date} = props;\n    const dey = formatDate(date);\n    const time = formatTime(date);\n\n    return (\n        <div className={classes.list}>\n            <Accordion>\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography>\n                        <span>{title}</span>\n                        <span className={classes.right}>{dey} {time}</span>\n                    </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Typography>{info}</Typography>\n                </AccordionDetails>\n            </Accordion>\n        </div>\n    )\n}\n\nexport { List }","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\n// material\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport Badge from '@material-ui/core/Badge';\n\n// actions\nimport {\n    addNotificationInit,\n    deleteNotificationsInit,\n} from '../../store/notifications/action';\n\n// components\nimport { Popup } from '..';\nimport { List } from '../ListsControl';\n\n// classes\nimport classes from './Notifications.module.scss';\n\n\nconst Notifications = (props) => {\n    const {notifications} = props;\n    const dispatch = useDispatch();\n\n    const addNotificationTimeToTime = () => {\n        dispatch(addNotificationInit());\n        setTimeout(addNotificationTimeToTime, 10000);\n    }\n\n    useEffect(() => {\n        setTimeout(addNotificationTimeToTime, 10000);\n    }, []);\n\n\n    const viewNotifications = notifications.map((notification, i) => {\n        return (\n            <List key={`${notification.date}${i}`}\n                  title={notification.title}\n                  info={notification.info}\n                  date={notification.date}\n            />\n        )\n    });\n\n    const deleteNotifications = () => {\n        dispatch(deleteNotificationsInit());\n    }\n\n    return (\n        <section className={classes.notContainer}>\n            <div className={classes.notContainer__icon}>\n                <Popup\n                    title='Notifications'\n                    content={viewNotifications}\n                    event={deleteNotifications}\n                >\n                    <Badge badgeContent={notifications.length} color=\"primary\">\n                        <NotificationsNoneIcon fontSize='large' />\n                    </Badge>\n                </Popup>\n            </div>\n        </section>\n    )\n}\n\nexport { Notifications }","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\n// material\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\n\n// actions\nimport { deleteTodoInit } from '../../store/todo/action';\n\n// components\nimport { List } from '.';\n\n// classes\nimport classes from './ListsControle.module.scss';\n\n\nconst ListsControls = (props) => {\n    const dispatch = useDispatch();\n    const {todoLists} = props;\n\n    const removeList = (index) => {\n        dispatch(deleteTodoInit(index));\n    }\n\n    const viewLists = todoLists.map((list, i) => {\n        const {title, info, date} = list;\n        return (\n            <div className={classes.listContainer__listPanl} key={`${title}${i}`}>\n                <List title={title} info={info} date={date} />\n                <div className={classes.listContainer__listPanl__buttons}>\n                    <div\n                        onClick={() => removeList(i)}\n                        className={classes.listContainer__listPanl__buttons__delete}\n                    >\n                        <DeleteOutlineIcon />\n                    </div>\n                </div>\n            </div>\n        )\n    })\n\n    return (\n        <section className={classes.listContainer}>\n            {viewLists}\n        </section>\n    )\n}\n\nexport { ListsControls }","import React, { useState } from 'react';\n\n// material\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        minWidth: 300+'px',\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\n\nconst Popup = (props) => {\n    const {\n        children,\n        title,\n        content,\n        event,\n    } = props;\n\n    const [open, setOpen] = useState(false);\n\n    const openDialog = () => setOpen(true);\n    const closeDialog = () => setOpen(false);\n    const closeAndHandelEvent = () => {\n        setOpen(false);\n        event();\n    }\n\n    return (\n        <div>\n            <div onClick={openDialog}>{children}</div>\n\n            <Dialog onClose={closeDialog} aria-labelledby=\"customized-dialog-title\" open={open}>\n                <DialogTitle id=\"customized-dialog-title\" onClose={closeDialog}>\n                    {title}\n                </DialogTitle>\n\n                <DialogContent dividers>\n                    <Typography gutterBottom component={'span'}> {content} </Typography>\n                </DialogContent>\n\n                <DialogActions>\n                    <Button autoFocus onClick={closeAndHandelEvent} color=\"secondary\">\n                        Delete notifications\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\n\nexport { Popup }","import React from 'react';\nimport { useSelector } from 'react-redux';\n\n// components\nimport {\n    CreateList,\n    ListsControls,\n    Notifications,\n} from '../../components';\n\n// classes\nimport classes from './TodoList.module.scss';\n\n\nconst TodoList = () => {\n    const {todoLists} = useSelector((state) => state.todoReducer);\n    const {notifications} = useSelector((state) => state.notificationReducer);\n\n    return (\n        <main className={classes.mainContainer}>\n            <h2 className={classes.mainContainer__title}>To Do List</h2>\n            <CreateList />\n            <ListsControls todoLists={todoLists} />\n            <Notifications notifications={notifications} />\n        </main>\n    )\n}\n\nexport { TodoList }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { TodoList } from './containers';\nimport './index.scss';\n\nReactDOM.render(\n  <React.Fragment>\n      <Provider store={store}>\n          <TodoList />\n      </Provider>\n  </React.Fragment>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"CreateList_formContainer__1hqdS\",\"formContainer__fieldsContainer\":\"CreateList_formContainer__fieldsContainer__3IL-I\",\"formContainer__fieldsContainer__field\":\"CreateList_formContainer__fieldsContainer__field__qx7gK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"ListsControle_listContainer__2l_Jv\",\"listContainer__listPanl\":\"ListsControle_listContainer__listPanl__3h8MZ\",\"listContainer__listPanl__buttons\":\"ListsControle_listContainer__listPanl__buttons__2q1to\",\"listContainer__listPanl__buttons__edit\":\"ListsControle_listContainer__listPanl__buttons__edit__1p7yl\",\"listContainer__listPanl__buttons__delete\":\"ListsControle_listContainer__listPanl__buttons__delete__2OESj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__2q5nl\",\"right\":\"List_right__3qgvX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notContainer__icon\":\"Notifications_notContainer__icon__skhLL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"TodoList_mainContainer__2B3Ii\",\"mainContainer__title\":\"TodoList_mainContainer__title__1WjLQ\"};"],"sourceRoot":""}